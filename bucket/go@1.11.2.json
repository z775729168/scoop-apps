{
 "architecture": {
  "32bit": {
   "hash": "sha256:56dc82a16747be3b94213cd53a059437462437bc67a087552111324d3f64877a",
   "url": "https://storage.googleapis.com/golang/go1.11.2.windows-386.zip"
  },
  "64bit": {
   "hash": "sha256:086c59df0dce54d88f30edd50160393deceb27e73b8d6b46b9ee3f88b0c02e28",
   "url": "https://storage.googleapis.com/golang/go1.11.2.windows-amd64.zip"
  }
 },
 "autoupdate": {
  "architecture": {
   "32bit": {
    "url": "https://storage.googleapis.com/golang/go$version.windows-386.zip"
   },
   "64bit": {
    "url": "https://storage.googleapis.com/golang/go$version.windows-amd64.zip"
   }
  },
  "hash": {
   "url": "$url.sha256"
  }
 },
 "bin": [
  "bin/go.exe",
  "bin/gofmt.exe",
  "bin/godoc.exe"
 ],
 "checkver": "Build version go([\\d\\.]+)\\.",
 "extract_dir": "go",
 "homepage": "https://golang.org",
 "license": "https://golang.org/LICENSE",
 "post_install": "ensure_in_path \"$env:GOPATH\\bin\" $global",
 "pre_install": "        # GOPATH        # respect USER value, if defined        if ($env:GOPATH) { } else {            # otherwise, 1st existing known default; otherwise, 1st of known defaults            $default_dirs = @( \"$env:USERPROFILE\\go\", \"$env:USERPROFILE\\.go\" )            $val = $( @($default_dirs |% { get-item $_ -ea silent }) + $default_dirs[0] ) | select -first 1            # ensure directory exists            new-item $val -type directory -force | out-null            env GOPATH -t $global $val            env GOPATH $val        }        ",
 "version": "1.11.2"
}