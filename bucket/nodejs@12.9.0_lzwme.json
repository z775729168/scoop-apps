{
  "homepage": "https://nodejs.org",
  "description": "As an asynchronous event driven JavaScript runtime, Node is designed to build scalable network applications.",
  "version": "19.7.0",
  "license": "MIT",
  "architecture": {
    "64bit": {
      "url": "https://registry.npmmirror.com/-/binary/node/v19.7.0/node-v19.7.0-win-x64.7z",
      "hash": "32e798d8f139eee1e49d5d91e5547cdcfc80ed3a6b52b0f8455635f9c71e1674",
      "extract_dir": "node-v19.7.0-win-x64"
    },
    "32bit": {
      "url": "https://registry.npmmirror.com/-/binary/node/v19.7.0/node-v19.7.0-win-x86.7z",
      "hash": "ad8c1a3d6338b4f36df52af1860e5c3c2946b7c3c1552d8184c586acd4c594f5",
      "extract_dir": "node-v19.7.0-win-x86"
    }
  },
  "persist": [
    "bin",
    "cache"
  ],
  "env_add_path": [
    ".",
    "bin"
  ],
  "##": "maint!: [2019-03-17] depend on `yarn` to install and update `npm` and `npx` as the current `npm` upgrade system fails (see <https://stackoverflow.com/questions/18412129/how-can-i-update-npm-on-windows/31520672#31520672>)",
  "post_install": [
    "",
    "# install yarn, if needed; doing it here avoids a circular dependency between nodejs and yarn",
    "# * finalize current install prior to installing `yarn` (which requires nodejs) to avoid circular dependency issues",
    "env_add_path $manifest $dir $global; env_set $manifest $dir $global; save_installed_manifest $app $dir $url",
    "$null, $bucket, $null = app_parse $app ; save_install_info @{ 'architecture' = $architecture; 'url' = $url; 'bucket' = $bucket } $dir",
    "if ( -not $( get-command yarn -ea silent ) ) { scoop install rivy/yarn; }",
    "env 'PATH' $env:PATH",
    "yarn global add npm npx",
    "# Remove broken included `npm` and `npx`; replacing them with `yarn`-installed versions",
    "$path = \"$dir\\npm\" ; if (test-path $path) { echo $('removing ' + $path); remove-item $path }",
    "$path = \"$dir\\npm.cmd\" ; if (test-path $path) { echo $('removing ' + $path); remove-item $path }",
    "$path = \"$dir\\npx\" ; if (test-path $path) { echo $('removing ' + $path); remove-item $path }",
    "$path = \"$dir\\npx.cmd\" ; if (test-path $path) { echo $('removing ' + $path); remove-item $path }",
    "$path = \"$dir\\node_modules\\npm\" ; if (test-path $path) { echo $('removing ' + $path); remove-item $path -recurse }"
  ],
  "checkver": {
    "url": "https://registry.npmmirror.com/-/binary/node/latest/",
    "re": "node-v([\\d.]+)-x86.msi"
  },
  "autoupdate": {
    "architecture": {
      "64bit": {
        "url": "https://registry.npmmirror.com/-/binary/node/v$version/node-v$version-win-x64.7z",
        "extract_dir": "node-v$version-win-x64"
      },
      "32bit": {
        "url": "https://registry.npmmirror.com/-/binary/node/v$version/node-v$version-win-x86.7z",
        "extract_dir": "node-v$version-win-x86"
      }
    },
    "hash": {
      "url": "$baseurl/SHASUMS256.txt.asc"
    }
  },
  "_from": "anderlli0053/DEV-tools"
}