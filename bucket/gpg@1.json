{
 "autoupdate": {
  "url": "https://www.gnupg.org/ftp/gcrypt/binary/gnupg-w32cli-$version.exe#/dl.7z"
 },
 "bin": [
  "gpg.exe",
  "gpgkeys_curl.exe",
  "gpgkeys_finger.exe",
  "gpgkeys_hkp.exe",
  "gpgkeys_ldap.exe",
  "gpgsplit.exe",
  "gpgv.exe"
 ],
 "checkver": {
  "re": "gnupg-w32cli-(?<version>1\\.[\\d.]+)\\.exe",
  "url": "https://www.gnupg.org/ftp/gcrypt/binary/"
 },
 "hash": "59234aed42a0822c53480de33e2d6a2d82f3c0cde1dc0fdabebad1549014f2b6",
 "homepage": "https://www.gnupg.org/",
 "license": "GPL-3.0",
 "pre_install": "        # GnuPGHOME        # * use 'pre_install' (or 'post_install') instead of 'env_set' so that `scoop` doesn't remove the variable if/when uninstalled        # respect USER value, if defined        if ($env:GnuPGHOME) { } else {            # otherwise, 1st existing known default; otherwise, 1st of known defaults            $default_dirs = @( \"$env:USERPROFILE\\.gnupg\", \"$env:USERPROFILE\\.keydb\" )            $val = @( $($default_dirs |% { get-item $_ -ea silent }), $default_dirs[0] ) | select -first 1            # ensure directory exists            new-item $val -type directory -force | out-null            # add to environment            env GnuPGHOME -t $global $val            env GnuPGHOME $val        }        ",
 "url": "https://www.gnupg.org/ftp/gcrypt/binary/gnupg-w32cli-1.4.23.exe#/dl.7z",
 "version": "1.4.23"
}